{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsvet\\\\Downloads\\\\backend\\\\frontend\\\\src\\\\components\\\\CryptoPrices.js\";\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nconst CryptoPrices = () => {\n  const [prices, setPrices] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    // Функция за зареждане на цените\n    const fetchPrices = () => {\n      axios.get(\"http://localhost:8080/api/crypto/prices\").then(response => {\n        setPrices(response.data);\n        setLoading(false);\n      }).catch(error => {\n        console.error(\"Error fetching prices:\", error);\n        setLoading(false);\n      });\n    };\n\n    // Зареждаме веднага при стартиране на компонента\n    fetchPrices();\n\n    // Настройваме интервал за обновяване на цените на всеки 10 секунди\n    const interval = setInterval(fetchPrices, 10000);\n\n    // Почиства интервала, когато компонентът се демонтира\n    return () => clearInterval(interval);\n  }, []); // празен масив, така че да се изпълнява само при първоначално зареждане\n\n  if (loading) return /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 23\n    }\n  }, \"Loading prices...\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, \"Market Prices\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Symbol\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, \"Price (USD)\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, prices.map((price, i) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }\n  }, price.symbol), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, price.price))))));\n};\nexport default CryptoPrices;","map":{"version":3,"names":["React","useEffect","useState","axios","CryptoPrices","prices","setPrices","loading","setLoading","fetchPrices","get","then","response","data","catch","error","console","interval","setInterval","clearInterval","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","price","i","key","symbol"],"sources":["C:/Users/tsvet/Downloads/backend/frontend/src/components/CryptoPrices.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CryptoPrices = () => {\r\n  const [prices, setPrices] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Функция за зареждане на цените\r\n    const fetchPrices = () => {\r\n      axios.get(\"http://localhost:8080/api/crypto/prices\")\r\n        .then(response => {\r\n          setPrices(response.data);\r\n          setLoading(false);\r\n        })\r\n        .catch(error => {\r\n          console.error(\"Error fetching prices:\", error);\r\n          setLoading(false);\r\n        });\r\n    };\r\n\r\n    // Зареждаме веднага при стартиране на компонента\r\n    fetchPrices();\r\n\r\n    // Настройваме интервал за обновяване на цените на всеки 10 секунди\r\n    const interval = setInterval(fetchPrices, 10000);\r\n\r\n    // Почиства интервала, когато компонентът се демонтира\r\n    return () => clearInterval(interval);\r\n  }, []); // празен масив, така че да се изпълнява само при първоначално зареждане\r\n\r\n  if (loading) return <p>Loading prices...</p>;\r\n\r\n  return (\r\n    <div>\r\n      <h2>Market Prices</h2>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Symbol</th>\r\n            <th>Price (USD)</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {prices.map((price, i) => (\r\n            <tr key={i}>\r\n              <td>{price.symbol}</td>\r\n              <td>{price.price}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoPrices;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}