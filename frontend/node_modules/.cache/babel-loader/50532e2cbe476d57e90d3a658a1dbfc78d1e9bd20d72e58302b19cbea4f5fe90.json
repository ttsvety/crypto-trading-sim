{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsvet\\\\Downloads\\\\backend\\\\frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Balance from \"./Balance\";\nimport HoldingsTable from \"./HoldingsTable\";\nimport TransactionForm from \"./TransactionForm\";\nimport CryptoPrices from \"./CryptoPrices\";\nimport TransactionHistory from \"./TransactionHistory\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  userId\n}) => {\n  _s();\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const refreshData = () => {\n    setRefreshCounter(prev => prev + 1);\n  };\n  const resetBalance = () => {\n    axios.put(`http://localhost:8080/api/user/${userId}/reset`).then(() => {\n      alert(\"Balance is 10000 USD\");\n      refreshData(); // Презареждане на данните\n    }).catch(err => {\n      console.error(\"Error during balance reset:\", err);\n      alert(\"Error with reset\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u041F\\u0430\\u043D\\u0435\\u043B \\u043D\\u0430 \\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Balance, {\n      userId: userId,\n      refreshKey: refreshCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetBalance,\n      children: \"Reset Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(HoldingsTable, {\n      userId: userId,\n      refreshKey: refreshCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionForm, {\n      userId: userId,\n      onTransactionComplete: refreshData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CryptoPrices, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TransactionHistory, {\n      userId: userId,\n      refreshKey: refreshCounter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"Vw1gY3Ouj41sAmN9r9yALMcW5vs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","Balance","HoldingsTable","TransactionForm","CryptoPrices","TransactionHistory","jsxDEV","_jsxDEV","Dashboard","userId","_s","refreshCounter","setRefreshCounter","refreshData","prev","resetBalance","put","then","alert","catch","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","refreshKey","onClick","onTransactionComplete","_c","$RefreshReg$"],"sources":["C:/Users/tsvet/Downloads/backend/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Balance from \"./Balance\";\r\nimport HoldingsTable from \"./HoldingsTable\";\r\nimport TransactionForm from \"./TransactionForm\";\r\nimport CryptoPrices from \"./CryptoPrices\";\r\nimport TransactionHistory from \"./TransactionHistory\";\r\n\r\nconst Dashboard = ({ userId }) => {\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  const refreshData = () => {\r\n    setRefreshCounter(prev => prev + 1);\r\n  };\r\n\r\n  const resetBalance = () => {\r\n    axios.put(`http://localhost:8080/api/user/${userId}/reset`)\r\n      .then(() => {\r\n        alert(\"Balance is 10000 USD\");\r\n        refreshData(); // Презареждане на данните\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error during balance reset:\", err);\r\n        alert(\"Error with reset\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Панел на Потребителя</h2>\r\n\r\n      {/* Компоненти за показване на данни */}\r\n      <Balance userId={userId} refreshKey={refreshCounter} />\r\n      <button onClick={resetBalance}>Reset Balance</button>\r\n\r\n      <HoldingsTable userId={userId} refreshKey={refreshCounter} />\r\n      <TransactionForm userId={userId} onTransactionComplete={refreshData} />\r\n      <CryptoPrices />\r\n      <TransactionHistory userId={userId} refreshKey={refreshCounter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAChC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMe,WAAW,GAAGA,CAAA,KAAM;IACxBD,iBAAiB,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBf,KAAK,CAACgB,GAAG,CAAC,kCAAkCP,MAAM,QAAQ,CAAC,CACxDQ,IAAI,CAAC,MAAM;MACVC,KAAK,CAAC,sBAAsB,CAAC;MAC7BL,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;MACjDF,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,oBACEX,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAG7BpB,OAAA,CAACN,OAAO;MAACQ,MAAM,EAAEA,MAAO;MAACmB,UAAU,EAAEjB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvDpB,OAAA;MAAQsB,OAAO,EAAEd,YAAa;MAAAQ,QAAA,EAAC;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAErDpB,OAAA,CAACL,aAAa;MAACO,MAAM,EAAEA,MAAO;MAACmB,UAAU,EAAEjB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7DpB,OAAA,CAACJ,eAAe;MAACM,MAAM,EAAEA,MAAO;MAACqB,qBAAqB,EAAEjB;IAAY;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvEpB,OAAA,CAACH,YAAY;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAChBpB,OAAA,CAACF,kBAAkB;MAACI,MAAM,EAAEA,MAAO;MAACmB,UAAU,EAAEjB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV,CAAC;AAACjB,EAAA,CAjCIF,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAmCf,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}