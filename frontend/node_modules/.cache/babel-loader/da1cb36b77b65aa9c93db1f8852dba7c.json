{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsvet\\\\Downloads\\\\backend\\\\frontend\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Balance from \"./Balance\";\nimport HoldingsTable from \"./HoldingsTable\";\nimport TransactionForm from \"./TransactionForm\";\nimport CryptoPrices from \"./CryptoPrices\";\nimport TransactionHistory from \"./TransactionHistory\";\nconst Dashboard = ({\n  userId\n}) => {\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const refreshData = () => {\n    setRefreshCounter(prev => prev + 1);\n  };\n  const resetBalance = () => {\n    axios.put(`http://localhost:8080/api/user/${userId}/reset`).then(() => {\n      alert(\"Balance is 10000 USD\");\n      refreshData(); // Презареждане на данните\n    }).catch(err => {\n      console.error(\"Error during balance reset:\", err);\n      alert(\"Error with reset\");\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"\\u041F\\u0430\\u043D\\u0435\\u043B \\u043D\\u0430 \\u041F\\u043E\\u0442\\u0440\\u0435\\u0431\\u0438\\u0442\\u0435\\u043B\\u044F\"), /*#__PURE__*/React.createElement(Balance, {\n    userId: userId,\n    refreshKey: refreshCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Reset Balance\"), /*#__PURE__*/React.createElement(HoldingsTable, {\n    userId: userId,\n    refreshKey: refreshCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionForm, {\n    userId: userId,\n    onTransactionComplete: refreshData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CryptoPrices, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionHistory, {\n    userId: userId,\n    refreshKey: refreshCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","Balance","HoldingsTable","TransactionForm","CryptoPrices","TransactionHistory","Dashboard","userId","refreshCounter","setRefreshCounter","refreshData","prev","resetBalance","put","then","alert","catch","err","console","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","refreshKey","onClick","onTransactionComplete"],"sources":["C:/Users/tsvet/Downloads/backend/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Balance from \"./Balance\";\r\nimport HoldingsTable from \"./HoldingsTable\";\r\nimport TransactionForm from \"./TransactionForm\";\r\nimport CryptoPrices from \"./CryptoPrices\";\r\nimport TransactionHistory from \"./TransactionHistory\";\r\n\r\nconst Dashboard = ({ userId }) => {\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  const refreshData = () => {\r\n    setRefreshCounter(prev => prev + 1);\r\n  };\r\n\r\n  const resetBalance = () => {\r\n    axios.put(`http://localhost:8080/api/user/${userId}/reset`)\r\n      .then(() => {\r\n        alert(\"Balance is 10000 USD\");\r\n        refreshData(); // Презареждане на данните\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error during balance reset:\", err);\r\n        alert(\"Error with reset\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Панел на Потребителя</h2>\r\n\r\n      {/* Компоненти за показване на данни */}\r\n      <Balance userId={userId} refreshKey={refreshCounter} />\r\n      <button onClick={resetBalance}>Reset Balance</button>\r\n\r\n      <HoldingsTable userId={userId} refreshKey={refreshCounter} />\r\n      <TransactionForm userId={userId} onTransactionComplete={refreshData} />\r\n      <CryptoPrices />\r\n      <TransactionHistory userId={userId} refreshKey={refreshCounter} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AAErD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMY,WAAW,GAAGA,CAAA,KAAM;IACxBD,iBAAiB,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBZ,KAAK,CAACa,GAAG,CAAC,kCAAkCN,MAAM,QAAQ,CAAC,CACxDO,IAAI,CAAC,MAAM;MACVC,KAAK,CAAC,sBAAsB,CAAC;MAC7BL,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDM,KAAK,CAACC,GAAG,IAAI;MACZC,OAAO,CAACC,KAAK,CAAC,6BAA6B,EAAEF,GAAG,CAAC;MACjDF,KAAK,CAAC,kBAAkB,CAAC;IAC3B,CAAC,CAAC;EACN,CAAC;EAED,oBACElB,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE7B,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,gHAAwB,CAAC,eAG7B7B,KAAA,CAAAuB,aAAA,CAACnB,OAAO;IAACM,MAAM,EAAEA,MAAO;IAACoB,UAAU,EAAEnB,cAAe;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvD7B,KAAA,CAAAuB,aAAA;IAAQQ,OAAO,EAAEhB,YAAa;IAAAS,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,eAAqB,CAAC,eAErD7B,KAAA,CAAAuB,aAAA,CAAClB,aAAa;IAACK,MAAM,EAAEA,MAAO;IAACoB,UAAU,EAAEnB,cAAe;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7D7B,KAAA,CAAAuB,aAAA,CAACjB,eAAe;IAACI,MAAM,EAAEA,MAAO;IAACsB,qBAAqB,EAAEnB,WAAY;IAAAW,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvE7B,KAAA,CAAAuB,aAAA,CAAChB,YAAY;IAAAiB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChB7B,KAAA,CAAAuB,aAAA,CAACf,kBAAkB;IAACE,MAAM,EAAEA,MAAO;IAACoB,UAAU,EAAEnB,cAAe;IAAAa,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAC9D,CAAC;AAEV,CAAC;AAED,eAAepB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}