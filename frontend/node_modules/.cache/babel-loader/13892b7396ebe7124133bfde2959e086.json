{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsvet\\\\Downloads\\\\backend\\\\frontend\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\"; // ← правилното място за импорта\nimport Balance from \"./Balance\";\nimport HoldingsTable from \"./HoldingsTable\";\nimport TransactionForm from \"./TransactionForm\";\nimport CryptoPrices from \"./CryptoPrices\";\nimport TransactionHistory from \"./TransactionHistory\";\nconst Dashboard = ({\n  userId\n}) => {\n  const [refreshCounter, setRefreshCounter] = useState(0);\n  const refreshData = () => {\n    setRefreshCounter(prev => prev + 1);\n  };\n  const resetBalance = () => {\n    console.log(`Sending reset request for userId: ${userId}`);\n    axios.put(`http://localhost:8080/api/user/${userId}/reset`).then(() => {\n      console.log(\"Balance reset successful.\");\n      alert(\"Балансът е ресетнат до 10 000 USD.\");\n      refreshData(); // презареждане на данните\n    }).catch(err => {\n      console.error(\"Error during balance reset:\", err);\n      alert(\"Грешка при ресетване на баланса\");\n    });\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Balance, {\n    userId: userId,\n    refreshKey: refreshCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: resetBalance,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"\\u0420\\u0435\\u0441\\u0435\\u0442\\u043D\\u0438 \\u0411\\u0430\\u043B\\u0430\\u043D\\u0441\\u0430\"), /*#__PURE__*/React.createElement(HoldingsTable, {\n    userId: userId,\n    refreshKey: refreshCounter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionForm, {\n    userId: userId,\n    onTransactionComplete: refreshData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CryptoPrices, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(TransactionHistory, {\n    userId: userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }));\n};\nexport default Dashboard;","map":{"version":3,"names":["React","useState","axios","Balance","HoldingsTable","TransactionForm","CryptoPrices","TransactionHistory","Dashboard","userId","refreshCounter","setRefreshCounter","refreshData","prev","resetBalance","console","log","put","then","alert","catch","err","error","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","refreshKey","onClick","onTransactionComplete"],"sources":["C:/Users/tsvet/Downloads/backend/frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport axios from \"axios\"; // ← правилното място за импорта\r\nimport Balance from \"./Balance\";\r\nimport HoldingsTable from \"./HoldingsTable\";\r\nimport TransactionForm from \"./TransactionForm\";\r\nimport CryptoPrices from \"./CryptoPrices\";\r\nimport TransactionHistory from \"./TransactionHistory\";\r\n\r\nconst Dashboard = ({ userId }) => {\r\n  const [refreshCounter, setRefreshCounter] = useState(0);\r\n\r\n  const refreshData = () => {\r\n    setRefreshCounter(prev => prev + 1);\r\n  };\r\n\r\n  const resetBalance = () => {\r\n    console.log(`Sending reset request for userId: ${userId}`);\r\n    axios.put(`http://localhost:8080/api/user/${userId}/reset`)\r\n      .then(() => {\r\n        console.log(\"Balance reset successful.\");\r\n        alert(\"Балансът е ресетнат до 10 000 USD.\");\r\n        refreshData(); // презареждане на данните\r\n      })\r\n      .catch(err => {\r\n        console.error(\"Error during balance reset:\", err);\r\n        alert(\"Грешка при ресетване на баланса\");\r\n      });\r\n};\r\n\r\n\r\n  return (\r\n    <div>\r\n      <Balance userId={userId} refreshKey={refreshCounter} />\r\n\r\n      <button onClick={resetBalance}>\r\n        Ресетни Баланса\r\n      </button>\r\n\r\n      <HoldingsTable userId={userId} refreshKey={refreshCounter} />\r\n      <TransactionForm userId={userId} onTransactionComplete={refreshData} />\r\n      <CryptoPrices />\r\n      <TransactionHistory userId={userId} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAOC,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,kBAAkB,MAAM,sBAAsB;AAErD,MAAMC,SAAS,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAChC,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAEvD,MAAMW,WAAW,GAAGA,CAAA,KAAM;IACxBD,iBAAiB,CAACE,IAAI,IAAIA,IAAI,GAAG,CAAC,CAAC;EACrC,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzBC,OAAO,CAACC,GAAG,CAAC,qCAAqCP,MAAM,EAAE,CAAC;IAC1DP,KAAK,CAACe,GAAG,CAAC,kCAAkCR,MAAM,QAAQ,CAAC,CACxDS,IAAI,CAAC,MAAM;MACVH,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCG,KAAK,CAAC,oCAAoC,CAAC;MAC3CP,WAAW,CAAC,CAAC,CAAC,CAAC;IACjB,CAAC,CAAC,CACDQ,KAAK,CAACC,GAAG,IAAI;MACZN,OAAO,CAACO,KAAK,CAAC,6BAA6B,EAAED,GAAG,CAAC;MACjDF,KAAK,CAAC,iCAAiC,CAAC;IAC1C,CAAC,CAAC;EACR,CAAC;EAGC,oBACEnB,KAAA,CAAAuB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACE7B,KAAA,CAAAuB,aAAA,CAACpB,OAAO;IAACM,MAAM,EAAEA,MAAO;IAACqB,UAAU,EAAEpB,cAAe;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAEvD7B,KAAA,CAAAuB,aAAA;IAAQQ,OAAO,EAAEjB,YAAa;IAAAU,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,uFAEvB,CAAC,eAET7B,KAAA,CAAAuB,aAAA,CAACnB,aAAa;IAACK,MAAM,EAAEA,MAAO;IAACqB,UAAU,EAAEpB,cAAe;IAAAc,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC7D7B,KAAA,CAAAuB,aAAA,CAAClB,eAAe;IAACI,MAAM,EAAEA,MAAO;IAACuB,qBAAqB,EAAEpB,WAAY;IAAAY,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eACvE7B,KAAA,CAAAuB,aAAA,CAACjB,YAAY;IAAAkB,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAChB7B,KAAA,CAAAuB,aAAA,CAAChB,kBAAkB;IAACE,MAAM,EAAEA,MAAO;IAAAe,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAClC,CAAC;AAEV,CAAC;AAED,eAAerB,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module"}