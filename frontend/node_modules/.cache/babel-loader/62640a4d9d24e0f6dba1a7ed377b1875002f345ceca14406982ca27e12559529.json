{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsvet\\\\Downloads\\\\crypto\\\\frontend\\\\src\\\\components\\\\TransactionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst symbolMap = {\n  BTC: \"XXBTZUSD\",\n  ETH: \"XETHZUSD\",\n  XRP: \"XXRPZUSD\",\n  LTC: \"XLTCZUSD\",\n  ETC: \"XETCZUSD\",\n  XLM: \"XXLMZUSD\",\n  DOGE: \"XDGUSD\",\n  ADA: \"ADAUSD\",\n  ALGO: \"ALGOUSD\",\n  NEAR: \"NEARUSD\",\n  EOS: \"EOSUSD\",\n  FIL: \"FILUSD\",\n  MATIC: \"MATICUSD\",\n  AVAX: \"AVAXUSD\",\n  SOL: \"SOLUSD\",\n  BCH: \"BCHUSD\",\n  TRX: \"TRXUSD\",\n  LINK: \"LINKUSD\",\n  DOT: \"DOTUSD\",\n  ATOM: \"ATOMUSD\"\n};\nconst TransactionForm = ({\n  userId,\n  onTransactionComplete\n}) => {\n  _s();\n  const [symbol, setSymbol] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [transactionType, setTransactionType] = useState(\"buy\");\n  const [prices, setPrices] = useState({});\n\n  // Зареждаме цените при зареждане\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/crypto/prices\").then(response => {\n      const pricesMap = {};\n      response.data.forEach(p => {\n        pricesMap[p.symbol] = p.price;\n      });\n      setPrices(pricesMap);\n    }).catch(error => console.error(\"Error fetching prices:\", error));\n  }, []);\n\n  // Когато символът се промени, обновяваме автоматично цената\n  useEffect(() => {\n    const krakenSymbol = symbolMap[symbol];\n    if (krakenSymbol && prices[krakenSymbol]) {\n      setPrice(prices[krakenSymbol].toFixed(2));\n    }\n  }, [symbol, prices]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const quantityNum = parseFloat(quantity);\n    const priceNum = parseFloat(price);\n    if (!symbol || quantityNum <= 0 || priceNum <= 0) {\n      alert(\"Please enter valid symbol, quantity, and price.\");\n      return;\n    }\n    const krakenSymbol = symbolMap[symbol];\n    if (!krakenSymbol) {\n      alert(\"Unsupported symbol.\");\n      return;\n    }\n    const transaction = {\n      userId,\n      symbol: krakenSymbol,\n      quantity: quantityNum,\n      price: priceNum,\n      type: transactionType,\n      total: quantityNum * priceNum\n    };\n    axios.post(\"http://localhost:8080/api/transactions\", transactionData).then(response => {\n      alert(\"Transaction successful!\");\n    }).catch(error => {\n      var _error$response;\n      const msg = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message || \"Unknown error\";\n      if (typeof msg === \"string\") {\n        if (msg.includes(\"Insufficient balance\")) {\n          alert(\"Нямаш достатъчно средства, за да направиш покупка.\");\n        } else if (msg.includes(\"Insufficient quantity\")) {\n          alert(\"Нямаш достатъчно от тази криптовалута, за да продадеш.\");\n        } else {\n          alert(\"Възникна грешка: \" + msg);\n        }\n      } else {\n        alert(\"Възникна грешка. Моля, опитайте отново.\");\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"New Transaction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Symbol (e.g., BTC)\",\n        value: symbol,\n        onChange: e => setSymbol(e.target.value.toUpperCase()),\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Quantity\",\n        value: quantity,\n        onChange: e => setQuantity(e.target.value),\n        min: \"0.000001\",\n        step: \"0.000001\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Price (USD)\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        min: \"0.01\",\n        step: \"0.01\",\n        required: true,\n        disabled: true // забраняваме ръчно писане\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: transactionType,\n        onChange: e => setTransactionType(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"buy\",\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"sell\",\n          children: \"Sell\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 5\n  }, this);\n};\n_s(TransactionForm, \"BgtLSNZGlfkUz4gC606dWGulW80=\");\n_c = TransactionForm;\nexport default TransactionForm;\nvar _c;\n$RefreshReg$(_c, \"TransactionForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","symbolMap","BTC","ETH","XRP","LTC","ETC","XLM","DOGE","ADA","ALGO","NEAR","EOS","FIL","MATIC","AVAX","SOL","BCH","TRX","LINK","DOT","ATOM","TransactionForm","userId","onTransactionComplete","_s","symbol","setSymbol","quantity","setQuantity","price","setPrice","transactionType","setTransactionType","prices","setPrices","get","then","response","pricesMap","data","forEach","p","catch","error","console","krakenSymbol","toFixed","handleSubmit","e","preventDefault","quantityNum","parseFloat","priceNum","alert","transaction","type","total","post","transactionData","_error$response","msg","message","includes","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","toUpperCase","required","min","step","disabled","_c","$RefreshReg$"],"sources":["C:/Users/tsvet/Downloads/crypto/frontend/src/components/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst symbolMap = {\r\n  BTC: \"XXBTZUSD\",\r\n  ETH: \"XETHZUSD\",\r\n  XRP: \"XXRPZUSD\",\r\n  LTC: \"XLTCZUSD\",\r\n  ETC: \"XETCZUSD\",\r\n  XLM: \"XXLMZUSD\",\r\n  DOGE: \"XDGUSD\",\r\n  ADA: \"ADAUSD\",\r\n  ALGO: \"ALGOUSD\",\r\n  NEAR: \"NEARUSD\",\r\n  EOS: \"EOSUSD\",\r\n  FIL: \"FILUSD\",\r\n  MATIC: \"MATICUSD\",\r\n  AVAX: \"AVAXUSD\",\r\n  SOL: \"SOLUSD\",\r\n  BCH: \"BCHUSD\",\r\n  TRX: \"TRXUSD\",\r\n  LINK: \"LINKUSD\",\r\n  DOT: \"DOTUSD\",\r\n  ATOM: \"ATOMUSD\"\r\n};\r\n\r\nconst TransactionForm = ({ userId, onTransactionComplete }) => {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [transactionType, setTransactionType] = useState(\"buy\");\r\n  const [prices, setPrices] = useState({});\r\n\r\n  // Зареждаме цените при зареждане\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8080/api/crypto/prices\")\r\n      .then(response => {\r\n        const pricesMap = {};\r\n        response.data.forEach(p => {\r\n          pricesMap[p.symbol] = p.price;\r\n        });\r\n        setPrices(pricesMap);\r\n      })\r\n      .catch(error => console.error(\"Error fetching prices:\", error));\r\n  }, []);\r\n\r\n  // Когато символът се промени, обновяваме автоматично цената\r\n  useEffect(() => {\r\n    const krakenSymbol = symbolMap[symbol];\r\n    if (krakenSymbol && prices[krakenSymbol]) {\r\n      setPrice(prices[krakenSymbol].toFixed(2));\r\n    }\r\n  }, [symbol, prices]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const quantityNum = parseFloat(quantity);\r\n    const priceNum = parseFloat(price);\r\n\r\n    if (!symbol || quantityNum <= 0 || priceNum <= 0) {\r\n      alert(\"Please enter valid symbol, quantity, and price.\");\r\n      return;\r\n    }\r\n\r\n    const krakenSymbol = symbolMap[symbol];\r\n    if (!krakenSymbol) {\r\n      alert(\"Unsupported symbol.\");\r\n      return;\r\n    }\r\n\r\n    const transaction = {\r\n      userId,\r\n      symbol: krakenSymbol,\r\n      quantity: quantityNum,\r\n      price: priceNum,\r\n      type: transactionType,\r\n      total: quantityNum * priceNum\r\n    };\r\n\r\n    axios.post(\"http://localhost:8080/api/transactions\", transactionData)\r\n  .then(response => {\r\n    alert(\"Transaction successful!\");\r\n  })\r\n  .catch(error => {\r\n    const msg = error.response?.data || error.message || \"Unknown error\";\r\n\r\n    if (typeof msg === \"string\") {\r\n      if (msg.includes(\"Insufficient balance\")) {\r\n        alert(\"Нямаш достатъчно средства, за да направиш покупка.\");\r\n      } else if (msg.includes(\"Insufficient quantity\")) {\r\n        alert(\"Нямаш достатъчно от тази криптовалута, за да продадеш.\");\r\n      } else {\r\n        alert(\"Възникна грешка: \" + msg);\r\n      }\r\n    } else {\r\n      alert(\"Възникна грешка. Моля, опитайте отново.\");\r\n    }\r\n  });\r\n\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>New Transaction</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Symbol (e.g., BTC)\"\r\n          value={symbol}\r\n          onChange={(e) => setSymbol(e.target.value.toUpperCase())}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Quantity\"\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n          min=\"0.000001\"\r\n          step=\"0.000001\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Price (USD)\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          min=\"0.01\"\r\n          step=\"0.01\"\r\n          required\r\n          disabled // забраняваме ръчно писане\r\n        />\r\n        <select value={transactionType} onChange={(e) => setTransactionType(e.target.value)}>\r\n          <option value=\"buy\">Buy</option>\r\n          <option value=\"sell\">Sell</option>\r\n        </select>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}