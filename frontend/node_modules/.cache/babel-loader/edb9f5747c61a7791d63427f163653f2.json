{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tsvet\\\\Downloads\\\\backend\\\\frontend\\\\src\\\\components\\\\TransactionForm.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nconst symbolMap = {\n  BTC: \"XXBTZUSD\",\n  ETH: \"XETHZUSD\",\n  XRP: \"XXRPZUSD\",\n  LTC: \"XLTCZUSD\",\n  ETC: \"XETCZUSD\",\n  XLM: \"XXLMZUSD\",\n  DOGE: \"XDGUSD\",\n  ADA: \"ADAUSD\",\n  ALGO: \"ALGOUSD\",\n  NEAR: \"NEARUSD\",\n  EOS: \"EOSUSD\",\n  FIL: \"FILUSD\",\n  MATIC: \"MATICUSD\",\n  AVAX: \"AVAXUSD\",\n  SOL: \"SOLUSD\",\n  BCH: \"BCHUSD\",\n  TRX: \"TRXUSD\",\n  LINK: \"LINKUSD\",\n  DOT: \"DOTUSD\",\n  ATOM: \"ATOMUSD\"\n};\nconst TransactionForm = ({\n  userId,\n  onTransactionComplete\n}) => {\n  const [symbol, setSymbol] = useState(\"\");\n  const [quantity, setQuantity] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [transactionType, setTransactionType] = useState(\"buy\");\n  const [prices, setPrices] = useState({});\n\n  // Зареждаме цените при зареждане\n  useEffect(() => {\n    axios.get(\"http://localhost:8080/api/crypto/prices\").then(response => {\n      const pricesMap = {};\n      response.data.forEach(p => {\n        pricesMap[p.symbol] = p.price;\n      });\n      setPrices(pricesMap);\n    }).catch(error => console.error(\"Error fetching prices:\", error));\n  }, []);\n\n  // Когато символът се промени, обновяваме автоматично цената\n  useEffect(() => {\n    const krakenSymbol = symbolMap[symbol];\n    if (krakenSymbol && prices[krakenSymbol]) {\n      setPrice(prices[krakenSymbol].toFixed(2));\n    }\n  }, [symbol, prices]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const quantityNum = parseFloat(quantity);\n    const priceNum = parseFloat(price);\n    if (!symbol || quantityNum <= 0 || priceNum <= 0) {\n      alert(\"Please enter valid symbol, quantity, and price.\");\n      return;\n    }\n    const krakenSymbol = symbolMap[symbol];\n    if (!krakenSymbol) {\n      alert(\"Unsupported symbol.\");\n      return;\n    }\n    const transaction = {\n      userId,\n      symbol: krakenSymbol,\n      quantity: quantityNum,\n      price: priceNum,\n      type: transactionType,\n      total: quantityNum * priceNum\n    };\n    axios.post(\"http://localhost:8080/api/transactions\", transaction).then(() => {\n      alert(\"Transaction successful!\");\n      setSymbol(\"\");\n      setQuantity(\"\");\n      setPrice(\"\");\n      if (onTransactionComplete) {\n        onTransactionComplete();\n      }\n    }).catch(error => alert(\"Error: \" + error.message));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, \"New Transaction\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Symbol (e.g., BTC)\",\n    value: symbol,\n    onChange: e => setSymbol(e.target.value.toUpperCase()),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Quantity\",\n    value: quantity,\n    onChange: e => setQuantity(e.target.value),\n    min: \"0.000001\",\n    step: \"0.000001\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \"Price (USD)\",\n    value: price,\n    onChange: e => setPrice(e.target.value),\n    min: \"0.01\",\n    step: \"0.01\",\n    required: true,\n    disabled: true // забраняваме ръчно писане\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    value: transactionType,\n    onChange: e => setTransactionType(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"buy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, \"Buy\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"sell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 11\n    }\n  }, \"Sell\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Submit\")));\n};\nexport default TransactionForm;","map":{"version":3,"names":["React","useState","useEffect","axios","symbolMap","BTC","ETH","XRP","LTC","ETC","XLM","DOGE","ADA","ALGO","NEAR","EOS","FIL","MATIC","AVAX","SOL","BCH","TRX","LINK","DOT","ATOM","TransactionForm","userId","onTransactionComplete","symbol","setSymbol","quantity","setQuantity","price","setPrice","transactionType","setTransactionType","prices","setPrices","get","then","response","pricesMap","data","forEach","p","catch","error","console","krakenSymbol","toFixed","handleSubmit","e","preventDefault","quantityNum","parseFloat","priceNum","alert","transaction","type","total","post","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","placeholder","value","onChange","target","toUpperCase","required","min","step","disabled"],"sources":["C:/Users/tsvet/Downloads/backend/frontend/src/components/TransactionForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst symbolMap = {\r\n  BTC: \"XXBTZUSD\",\r\n  ETH: \"XETHZUSD\",\r\n  XRP: \"XXRPZUSD\",\r\n  LTC: \"XLTCZUSD\",\r\n  ETC: \"XETCZUSD\",\r\n  XLM: \"XXLMZUSD\",\r\n  DOGE: \"XDGUSD\",\r\n  ADA: \"ADAUSD\",\r\n  ALGO: \"ALGOUSD\",\r\n  NEAR: \"NEARUSD\",\r\n  EOS: \"EOSUSD\",\r\n  FIL: \"FILUSD\",\r\n  MATIC: \"MATICUSD\",\r\n  AVAX: \"AVAXUSD\",\r\n  SOL: \"SOLUSD\",\r\n  BCH: \"BCHUSD\",\r\n  TRX: \"TRXUSD\",\r\n  LINK: \"LINKUSD\",\r\n  DOT: \"DOTUSD\",\r\n  ATOM: \"ATOMUSD\"\r\n};\r\n\r\nconst TransactionForm = ({ userId, onTransactionComplete }) => {\r\n  const [symbol, setSymbol] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [transactionType, setTransactionType] = useState(\"buy\");\r\n  const [prices, setPrices] = useState({});\r\n\r\n  // Зареждаме цените при зареждане\r\n  useEffect(() => {\r\n    axios.get(\"http://localhost:8080/api/crypto/prices\")\r\n      .then(response => {\r\n        const pricesMap = {};\r\n        response.data.forEach(p => {\r\n          pricesMap[p.symbol] = p.price;\r\n        });\r\n        setPrices(pricesMap);\r\n      })\r\n      .catch(error => console.error(\"Error fetching prices:\", error));\r\n  }, []);\r\n\r\n  // Когато символът се промени, обновяваме автоматично цената\r\n  useEffect(() => {\r\n    const krakenSymbol = symbolMap[symbol];\r\n    if (krakenSymbol && prices[krakenSymbol]) {\r\n      setPrice(prices[krakenSymbol].toFixed(2));\r\n    }\r\n  }, [symbol, prices]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    const quantityNum = parseFloat(quantity);\r\n    const priceNum = parseFloat(price);\r\n\r\n    if (!symbol || quantityNum <= 0 || priceNum <= 0) {\r\n      alert(\"Please enter valid symbol, quantity, and price.\");\r\n      return;\r\n    }\r\n\r\n    const krakenSymbol = symbolMap[symbol];\r\n    if (!krakenSymbol) {\r\n      alert(\"Unsupported symbol.\");\r\n      return;\r\n    }\r\n\r\n    const transaction = {\r\n      userId,\r\n      symbol: krakenSymbol,\r\n      quantity: quantityNum,\r\n      price: priceNum,\r\n      type: transactionType,\r\n      total: quantityNum * priceNum\r\n    };\r\n\r\n    axios.post(\"http://localhost:8080/api/transactions\", transaction)\r\n      .then(() => {\r\n        alert(\"Transaction successful!\");\r\n        setSymbol(\"\");\r\n        setQuantity(\"\");\r\n        setPrice(\"\");\r\n        if (onTransactionComplete) {\r\n          onTransactionComplete();\r\n        }\r\n      })\r\n      .catch(error => alert(\"Error: \" + error.message));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>New Transaction</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Symbol (e.g., BTC)\"\r\n          value={symbol}\r\n          onChange={(e) => setSymbol(e.target.value.toUpperCase())}\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Quantity\"\r\n          value={quantity}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n          min=\"0.000001\"\r\n          step=\"0.000001\"\r\n          required\r\n        />\r\n        <input\r\n          type=\"number\"\r\n          placeholder=\"Price (USD)\"\r\n          value={price}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n          min=\"0.01\"\r\n          step=\"0.01\"\r\n          required\r\n          disabled // забраняваме ръчно писане\r\n        />\r\n        <select value={transactionType} onChange={(e) => setTransactionType(e.target.value)}>\r\n          <option value=\"buy\">Buy</option>\r\n          <option value=\"sell\">Sell</option>\r\n        </select>\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}